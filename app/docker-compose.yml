services:
  model:
    container_name: model
    build:
      context: ./model
    restart: unless-stopped

  crawler:
    container_name: crawler
    build:
      context: ./crawler
    restart: unless-stopped

  server:
    container_name: server
    build:
      context: ./server
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - model
      - crawler

  client:
    container_name: client
    build:
      context: ./client
      args:
        NEXT_PUBLIC_SERVER_URL: localhost
    restart: unless-stopped
    depends_on:
      - server

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitor/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SERVER_ROOT_URL=http://localhost/grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus
  
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - grafana


volumes:
  grafana-storage: